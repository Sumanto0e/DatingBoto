#   —Å–æ—Å—Ç–æ—è–Ω–∏—è (state):
#   0 - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —é–∑–µ—Ä–∞        1 - –≥–æ—Ç–æ–≤—ã–π –∞–∫–∞—É–Ω—Ç         2 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
#   3 - —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∞—É–Ω—Ç–∞         4 - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∞—É–Ω—Ç–∞     5 - —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#   6 -                          7 - –≤–≤–æ–¥ —Ä–µ—Ñ. –∫–æ–¥–∞         8 - —Å–º–µ–Ω–∞ –≥–æ—Ä–æ–¥–∞
#   9 - —Å–º–µ–Ω–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞           10 - –≤—ã–±–æ—Ä –ø–æ–ª–∞            11 -

# –≥–∞–π–¥ –ø–æ –∏–º–ø–æ—Ä—Ç–∞–º;

import datetime  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏
import random  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
import requests  # –º–æ–¥—É–ª—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ (–≤ –º–æ—ë–º —Å–ª—É—á–∞–µ –∫ QIWI api)
import keys  # ..
import pyqiwi # .
from vk_api import VkApi  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å api
from vk_api.longpoll import VkLongPoll, VkEventType  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å longpoll
from vk_api.keyboard import VkKeyboard, VkKeyboardColor  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
from random import choice  # ...
from sqlite3 import connect  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö

# ...


# –ø–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ( –î–∞–ª–µ–µ - –ë–î) –∏ —Å–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
database = connect('database.db')
try:
    database.execute(f'CREATE TABLE users ('
                     f'user_id UNIQUE,'
                     f'name TEXT,'
                     f'surname TEXT,'
                     f'about TEXT,'
                     f'likes INT,'
                     f'dislikes INT,'
                     f'state INT,'
                     f'viewed_user INT,'
                     f'photo TEXT,'
                     f'pro INT,'
                     f'views INT,'
                     f'city TEXT,'
                     f'views_count INT,'
                     f'pro_update_date TEXT,'
                     f'referral_code TEXT,'
                     f'payment_code INT,'
                     f'age INT,'
                     f'sex INT,'
                     f'select_sex INT,'
                     f'active INT,'
                     f'all_views INT);')
    database.commit()
except:
    pass
# ...

# –ø–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ vk api –∏ QIWI api
bot = VkApi(token=keys.VK_API_ACCESS_TOKEN)
longpoll = VkLongPoll(bot)
wallet = pyqiwi.Wallet(token=keys.QIWI_API_ACCESS_TOKEN, number=keys.QIWI_API_TELEPHONE_NUMBER)
qiwi_count = 1
# ...


# —Å–æ–∑–¥–∞—é –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
mainmenu = VkKeyboard()
mainmenu.add_button('‚ù§', VkKeyboardColor.POSITIVE)
mainmenu.add_button('‚úâ', VkKeyboardColor.PRIMARY)
mainmenu.add_button('üíî', VkKeyboardColor.NEGATIVE)
mainmenu.add_button('üôç‚Äç‚ôÇ', VkKeyboardColor.SECONDARY)
mainmenu.add_line()
mainmenu.add_button('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä üëÄ', VkKeyboardColor.POSITIVE)
mainmenu.add_line()
mainmenu.add_button('–ö—É–ø–∏—Ç—å pro üëë', VkKeyboardColor.SECONDARY)

promainmenu = VkKeyboard()
promainmenu.add_button('‚ù§', VkKeyboardColor.POSITIVE)
promainmenu.add_button('‚úâ', VkKeyboardColor.PRIMARY)
promainmenu.add_button('üíî', VkKeyboardColor.NEGATIVE)
promainmenu.add_button('üôç‚Äç‚ôÇ', VkKeyboardColor.SECONDARY)
promainmenu.add_line()
promainmenu.add_button('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä üëÄ', VkKeyboardColor.POSITIVE)

geolocation_keyboard = VkKeyboard()
geolocation_keyboard.add_location_button()
geolocation_keyboard.add_button('‚ùå –û—Ç–º–µ–Ω–∞')


cancel_keyboard = VkKeyboard()
cancel_keyboard.add_button('‚ùå –û—Ç–º–µ–Ω–∞')

description_keyboard = VkKeyboard()
description_keyboard.add_button('‚ùå –ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')

createprofile = VkKeyboard(inline=True)
createprofile.add_button(f'–°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É {choice(["üéÖ", "üéÅ", "üòâ", "üëë"])}')

main_profile_keyboard = VkKeyboard(inline=True)
main_profile_keyboard.add_button('–ú–æ–π —Ä–µ—Ñ. –∫–æ–¥ üîë', VkKeyboardColor.SECONDARY)
main_profile_keyboard.add_line()
main_profile_keyboard.add_button('–í–≤–µ—Å—Ç–∏ —Ä–µ—Ñ. –∫–æ–¥ üîë', VkKeyboardColor.SECONDARY)
main_profile_keyboard.add_line()
main_profile_keyboard.add_button('–û—Ç–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∞–∫–∞—É–Ω—Ç üò¥', VkKeyboardColor.NEGATIVE)
main_profile_keyboard.add_line()
main_profile_keyboard.add_button('–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ‚úè', VkKeyboardColor.PRIMARY)

edit_profile_keyboard = VkKeyboard(inline=True)
edit_profile_keyboard.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä–∫—É üë©/üë®', VkKeyboardColor.POSITIVE)
edit_profile_keyboard.add_line()
edit_profile_keyboard.add_button('–û–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ üì∑üîÅ', VkKeyboardColor.POSITIVE)
edit_profile_keyboard.add_line()
edit_profile_keyboard.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç üóì', VkKeyboardColor.POSITIVE)
edit_profile_keyboard.add_line()
edit_profile_keyboard.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ ‚úè', VkKeyboardColor.PRIMARY)
edit_profile_keyboard.add_line()
edit_profile_keyboard.add_button('C–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ üèô', VkKeyboardColor.PRIMARY)
edit_profile_keyboard.add_line()
edit_profile_keyboard.add_button('–£–¥–∞–ª–∏—Ç—å –∞–∫–∞—É–Ω—Ç üóë', VkKeyboardColor.NEGATIVE)

sex_keyboard = VkKeyboard(inline=True)
sex_keyboard.add_button('–î–µ–≤—É—à–µ–∫', VkKeyboardColor.PRIMARY)
sex_keyboard.add_line()
sex_keyboard.add_button('–ü–∞—Ä–Ω–µ–π', VkKeyboardColor.PRIMARY)
sex_keyboard.add_line()
sex_keyboard.add_button('–í—Å–µ—Ö', VkKeyboardColor.SECONDARY)

back_payment_keyboard = VkKeyboard()
back_payment_keyboard.add_button('–û—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç—ë–∂', VkKeyboardColor.SECONDARY)

end_registration_keyboard = VkKeyboard()
end_registration_keyboard.add_button('–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é ‚úÖ', VkKeyboardColor.POSITIVE)

# ...


def generate_random_string(user_id):
    """ —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ """
    letters = '1234567890'
    rand_string = str(user_id) + '-' + ''.join(random.choice(letters) for i in range(8))
    return rand_string


def database_query(query):
    """ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î """
    database.execute(query)
    database.commit()


#   —ç—Ç–æ —á–∞—Å—Ç—å —Å –æ–ø–ª–∞—Ç–æ–π –ø—Ä–µ–º–∏—É–º–∞

def generate_payment_code():  # —Ç—É—Ç —è –≥–µ–Ω–µ—Ä–∏—Ä—É—é –ø–ª–∞—Ç—ë–∂–Ω—ã–π –∫–æ–¥
    code = []

    def generate():
        return str(choice(range(10)))

    for _ in range(6):
        code.append(generate())
    return int(str(i.user_id) + ''.join(code))


def get_payments_history():  # –ø–æ–ª—É—á–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    """ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∫–æ—à–µ–ª—å–∫–∞ """
    count = len(database.execute(f'SELECT user_id FROM users WHERE payment_code!=0').fetchall())
    try:  # –µ—Å–ª–∏ –∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å - –±–µ—Ä—É
        history = wallet.history(rows=count).get('transactions')
    except ValueError:  # –µ—Å–ª–∏ –Ω–µ—Ç - —Ç–æ –Ω–µ—Ç
        history = [0]

    payment_code = database.execute(f'SELECT payment_code FROM users WHERE user_id={user_id}').fetchone()[0]

    for i in history:
        try:
            comm = int(i.raw['comment'])
        except:
            comm = 0
        if payment_code == comm:
            return (True, i)
    return False


def get_qiwi_payment_url():
    """ —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞—Ç—ë–∂–Ω—É—é —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    url = f"https://qiwi.com/payment/form/99999?extra%5B%27account%27%5D=SAINA682&extra%5B%27comment%27%5D=42345&amountInteger={qiwi_count}" \
          "&amountFraction=0&currency=643&blocked[0]=sum&blocked[1]=account&blocked[2]=comment&extra%5B%27accountType%27%5D=nickname"
    return url


for i in longpoll.listen():
    if i.type == VkEventType.MESSAGE_NEW and i.to_me:
        now = datetime.datetime.now().date()
        text = i.text.lower()  # —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        normaltext = i.text  # —Ç–µ–∫—Å—Ç –±–µ–∑ lower()
        user_id = i.user_id  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∫
        state = database.execute(f'SELECT state FROM users WHERE user_id={user_id}').fetchone()  # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è

        if not state is None:  # –ø—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –±–∞–∑–µ
            state = state[0]


        def send(text, keyboard=None, id=user_id, attachments=0):

            """ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è """
            if keyboard:
                bot.method(f'messages.send', {'message': text,
                                              'user_id': id,
                                              'random_id': 0,
                                              'keyboard': keyboard,
                                              'attachment': attachments})
            else:
                try:
                    pro = database.execute(f'SELECT pro FROM users WHERE user_id={user_id}').fetchone()[0]
                except:
                    pro = 0

                if pro == 1:
                    keyboard = promainmenu
                else:
                    keyboard = mainmenu

                bot.method(f'messages.send', {'message': text,
                                              'user_id': id,
                                              'random_id': 0,
                                              'attachment': attachments,
                                              'keyboard': keyboard.get_keyboard()})


        def check_pro_update():
            """ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–µ–º–∏—É–º  """
            try:
                pro_update_date = database.execute(f'SELECT pro_update_date FROM '
                                                   f'users WHERE user_id={user_id}').fetchone()[0]
                pro_update_date = '0-0-0' if not pro_update_date else pro_update_date

                pro_update_date = list(map(lambda x: int(x), pro_update_date.split('-')))
                pro_update_date = datetime.date(day=pro_update_date[2],
                                                month=pro_update_date[1],
                                                year=pro_update_date[0])
                if now > pro_update_date:
                    return True
                return False
            except:
                return False


        def view():
            """ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É """

            if check_pro_update():
                send('‚úÖ –£—Ä–∞!\n'
                     '–¢–µ–±–µ —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–∞–∫–µ—Ç –∏–∑ 10 –∞–Ω–∫–µ—Ç –≤ –¥–µ–Ω—å!')
                database_query(f'UPDATE users SET pro_update_date="{now}", views_count=0 WHERE user_id={user_id}')

            views_count = database.execute(f'SELECT views_count FROM users WHERE user_id={user_id}').fetchone()[0]
            views_count = 0 if not views_count else views_count
            pro = database.execute(f'SELECT pro FROM users WHERE user_id={user_id}').fetchone()[0]

            if pro == 1 or views_count < 10:
                all_views = database.execute(f'SELECT all_views FROM users WHERE user_id={user_id}').fetchone()[0]
                database_query(f'UPDATE users SET all_views={all_views + 1} WHERE user_id={user_id} ')
                sex = database.execute(f'SELECT select_sex FROM users WHERE user_id={user_id}').fetchone()[0]
                city = database.execute(f'SELECT city FROM users WHERE user_id={user_id}').fetchone()[0]
                if city != 'all':
                    if sex == 0:
                        usersdata = database.execute(f'SELECT * FROM '
                                                     f'users WHERE city="{city}" AND active=1').fetchall()  # –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ —Å –æ–ø—Ä–µ–¥. –≥–æ—Ä–æ–¥–æ–º
                    else:
                        usersdata = database.execute(f'SELECT * FROM '
                                                     f'users WHERE city="{city}" AND sex={sex} AND active=1').fetchall()
                else:
                    if sex == 0:
                        usersdata = database.execute(f'SELECT * FROM users WHERE active=1').fetchall()  # –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞
                    else:
                        usersdata = database.execute(f'SELECT * FROM '
                                                     f'users WHERE sex={sex} AND active=1').fetchall()

                if len(usersdata) >= 1:
                    for i in range(len(usersdata)):  # —É–±–∏—Ä–∞–µ–º id —Ç–µ–∫—É—â–µ–≥–æ —é–∑–µ—Ä–∞
                        if usersdata[i][0] == user_id:
                            del usersdata[i]
                            break

                    user = choice(usersdata)  # –°–ª—É—á–∞–π–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞ pro - 9
                    pro = user[9]
                    if pro == 1:
                        pro = 'üëë (pro)'
                    else:
                        pro = 'üíû'
                    database_query(f'UPDATE users SET viewed_user={user[0]} WHERE user_id={user_id}')
                    city = database.execute(f'SELECT city FROM users WHERE user_id={user[0]}').fetchone()[0]
                    city = '–Ω–µ —É–∫–∞–∑–∞–Ω' if city is None or city == 'none' else city
                    photo = database.execute(f'SELECT photo FROM users WHERE user_id={user[0]}').fetchone()[0]

                    if photo == '0':
                        photo = 'photo-204338719_457239214'

                    if city == 'all':
                        city = '–≤—Å–µ –≥–æ—Ä–æ–¥–∞'

                    keyboard = mainmenu if pro == 0 else promainmenu

                    age = user[16] if user[16] else '–Ω–µ —É–∫–∞–∑–∞–Ω'
                    send('‚úÖ –ü–æ–¥—Ö–æ–¥—è—â–∞—è –∞–Ω–∫–µ—Ç–∞:\n\n'
                         f'{pro} {user[1]} {user[2]} | {age} | {city}\n\n'
                         f'{user[3]}\n\n–§–æ—Ç–æ:', keyboard.get_keyboard(),
                         user_id,
                         photo)

                    user_views = database.execute(f'SELECT views FROM users WHERE user_id={user[0]}').fetchone()[0]
                    database_query(
                        f'UPDATE users SET views={user_views + 1}'
                        f' WHERE user_id={user[0]}')  # —É–≤–µ–ª–∏—á–∏–≤–∞—é –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞ 1
                    database_query(f'UPDATE users SET views_count={views_count + 1} WHERE user_id={user_id}')

                else:
                    send('–ü–æ—Ö–æ–∂–µ, –∏–∑ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤—ã:)\n'
                         '–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ:\n'
                         'https://vk.com/write-204338719')

            else:
                send('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–ª—å—à–µ 10 –∞–Ω–∫–µ—Ç –≤ –¥–µ–Ω—å –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏ pro!')


        if state == 0:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            send('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n'
                 '–ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã, –∏ —Ç–æ–≥–¥–∞ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –¥—Ä—É–∑–µ–π!\n\n'
                 '–ö–æ—Ä–æ—Ç–∫–∏–π –≥–∞–π–¥ –ø–æ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞:\n'
                 'https://vk.com/@datingbotvk-gaid-po-funkciyam-bota', mainmenu.get_keyboard())
            send('–¢–∞–∫-–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –≤—ã –∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –ª—é–¥—å–º–∏ –∏–∑ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞.'
                 '\n–ü–æ–∫–∞ –≤—ã –Ω–µ —Å–º–µ–Ω–∏–ª–∏ –≥–æ—Ä–æ–¥, –≤–∞–º –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ª—é–¥–∏ –∏–∑ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–æ–≤.\n'
                 '–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç: https://vk.com/@datingbotvk-smena-goroda-i-s-chem-ee-edyat.')
            database_query(f'UPDATE users SET state=1, active=1, all_views=1 WHERE user_id={user_id}')

        elif state == 2:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            if '–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è' in text:
                database_query(f'UPDATE users SET about="", state=8 WHERE user_id={user_id}')
                send('–í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∞–Ω–∫–µ—Ç—É –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è ‚úÖ')
            else:
                send(f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ: {normaltext}')
                database_query(f'UPDATE users SET about="{normaltext}", state=1 WHERE user_id={user_id}')
            send('üìç –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–∏–µ', geolocation_keyboard.get_keyboard())
            database_query(f'UPDATE users SET state=8 WHERE user_id={user_id}')

        elif state == 21:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã –æ–ø–∏—Å–∞–Ω–∏—è
            if '–±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è' in text:
                database_query(f'UPDATE users SET about="", state=1 WHERE user_id={user_id}')
                send('–í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ –∞–Ω–∫–µ—Ç—É –±–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è ‚úÖ')
            else:
                send(f'‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ: {normaltext}')
                database_query(f'UPDATE users SET about="{normaltext}", state=1 WHERE user_id={user_id}')

        elif state == 3:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∞—É–Ω—Ç–∞
            if text == '–¥–∞, —è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∞—É–Ω—Ç–∞.':
                send('–£–¥–∞–ª—è–µ–º –≤–∞—à –∞–∫–∞—É–Ω—Ç üîÉ')
                database_query(f'DELETE FROM users WHERE user_id={user_id}')
                send('‚úÖ –ú—ã —É–¥–∞–ª–∏–ª–∏ –≤–∞—à –∞–∫–∞—É–Ω—Ç;')

            else:
                send('–ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∞—É–Ω—Ç–∞ –±—ã–ª–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.')
                database_query(f'UPDATE users SET state=1 WHERE user_id={user_id}')

        elif state == 4:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            send('‚ùå –í–∞—à –∞–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.')

        elif state == 5:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
            try:
                if '‚ùå –æ—Ç–º–µ–Ω–∞' in text:
                    database_query(f'UPDATE users SET state=0 WHERE user_id={user_id}')
                    send('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚úÖ', mainmenu.get_keyboard())
                else:
                    send('‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ;')

                    recipient = database.execute(f'SELECT viewed_user FROM users WHERE user_id={user_id}').fetchone()
                    recipient = database.execute(
                        f'SELECT name, surname, user_id FROM users WHERE user_id={recipient[0]}').fetchone()
                    sender = database.execute(f'SELECT name, surname FROM users WHERE user_id={user_id}').fetchone()
                    user = bot.method(f'users.get', {'user_ids': [user_id], 'fields': 'screen_name'})[0]
                    try:
                        send(f'@{user["screen_name"]} ({sender[0]} {sender[1]}) –æ—Å—Ç–∞–≤–∏–ª —Ç–µ–±–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n'
                             f'{text}', None, recipient[2])

                    except:
                        send('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.')

                    view()

                database_query(f'UPDATE users SET state=1 WHERE user_id={user_id}')

            except:
                send('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. \n–ü–æ—Ö–æ–∂–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!')

        elif state == 7:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ñ. –∫–æ–¥–∞
            code = database.execute(f'SELECT user_id, name, surname FROM users WHERE referral_code="{text}"').fetchone()
            if code:
                if code[0] != user_id:
                    send(f'–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {code[1]} {code[2]} –ø—Ä–∏–Ω—è—Ç ‚úÖ\n')
                    send('–ü—Ä–∏–≤–µ—Ç üëã\n'
                         f'–¢–≤–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ ({text}) –∫—Ç–æ-—Ç–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª, —Ç–µ–±–µ'
                         ' –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø—Ä–µ–º–∏—É–º, –∏ –æ–Ω —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω üòé\n\n'
                         '–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞.', None, code[0])
                    send('–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–µ–º–∏—É–º –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É ‚úÖ\n'
                         '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!')
                    database_query(f'UPDATE users SET referral_code="" WHERE user_id={code[0]}')  # –ø—É—Å—Ç–æ–π —Ä–µ—Ñ. –∫–æ–¥
                    database_query(f'UPDATE users SET pro=1 WHERE user_id={user_id}')  # –¥–∞—é –ø—Ä–µ–º
                    database_query(f'UPDATE users SET pro=1 WHERE user_id={user_id}')  # –¥–∞—é –ø—Ä–µ–º
                else:
                    send('ü¶ê –ù–µ–ª—å–∑—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∂–µ –∫–æ–¥:)')
            else:
                send('‚ùå –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.')
            database_query(f'UPDATE users SET state=1 WHERE user_id={user_id}')  # –≤–æ–∑–≤—Ä–∞—â–∞—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ.

        elif state == 8:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã –≥–æ—Ä–æ–¥–∞
            result = bot.method("messages.getById", {"message_ids": [i.message_id],
                                                     "group_id": 189072320})

            if text == '–≤—Å–µ':
                database_query(f'UPDATE users SET city="all" WHERE user_id={user_id}')
                send('–¢–µ–ø–µ—Ä—å –≤—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –≤—Å–µ –≥–æ—Ä–æ–¥–∞.')
            else:
                try:
                    if result['items'][0].get('geo', False):
                        result = result['items'][0]['geo']['place']['city']
                        send(f'–í–∞—à –≥–æ—Ä–æ–¥ - {result}.'
                             f'–ú—ã –∑–∞–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∏ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ–º –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞–º –ª—é–¥–µ–π –∏–∑ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚úÖ')
                        database_query(f'UPDATE users SET city="{result}" WHERE user_id={user_id}')
                    else:
                        send('–≠—Ç–æ –Ω–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ  üìç')
                except:
                    send('‚ùå –û—à–∏–±–∫–∞')

            if database.execute(f'SELECT active FROM users WHERE user_id={user_id}').fetchone()[0] is None:
                send(f'–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏, –∫–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö?', sex_keyboard.get_keyboard())
                database_query(f'UPDATE users SET about="{normaltext}", state=10 WHERE user_id={user_id}')

            else:
                database_query(f'UPDATE users SET state=1 WHERE user_id={user_id}')

        elif state == 9:  # c–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            if text.isdigit():
                if int(text) >= 18:
                    send('‚úÖ –ü—Ä–∏–Ω—è—Ç–æ;')
                    database_query(f'UPDATE users SET state=2, age={int(text)} WHERE user_id={user_id}')
                    send('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–±–µ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ (—á–µ–º —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è, –∏–ª–∏ —á—Ç–æ –∏—â–µ—à—å —Ç—É—Ç);', keyboard=description_keyboard.get_keyboard())
                else:
                    send('‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –≤–∞–º –±–æ–ª—å—à–µ 18 –ª–µ—Ç.')
            else:
                send('‚ùå –£–∫–∞–∂–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç;')

        elif state == 91:  # c–æ—Å—Ç–æ—è–Ω–∏–µ —Å–º–µ–Ω—ã –≤–æ–∑—Ä–∞—Å—Ç–∞
            if text.isdigit():
                if int(text) >= 18:
                    send('‚úÖ –ü—Ä–∏–Ω—è—Ç–æ;')
                    database_query(f'UPDATE users SET state=1, age={int(text)} WHERE user_id={user_id}')
                else:
                    send('‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –≤–∞–º –±–æ–ª—å—à–µ 18 –ª–µ—Ç.')
                    database_query(f'UPDATE users SET state=1 WHERE user_id={user_id}')
            else:
                send('‚ùå –£–∫–∞–∂–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç;')

        elif state == 10:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≤—ã–±–æ—Ä–∫–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            send('‚úÖ –ü—Ä–∏–Ω—è—Ç–æ')
            end = False
            if text == '–ø–∞—Ä–Ω–µ–π':
                database_query(f'UPDATE users SET select_sex=2, state=11 WHERE user_id={user_id}')
                end = True
            elif text == '–¥–µ–≤—É—à–µ–∫':
                database_query(f'UPDATE users SET select_sex=1, state=11 WHERE user_id={user_id}')
                end = True
            elif text == '–≤—Å–µ—Ö':
                database_query(f'UPDATE users SET select_sex=0, state=11 WHERE user_id={user_id}')
                end = True
            else:
                send('‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è;')

            if end:
                send('–û—Ç–ª–∏—á–Ω–æ ‚úÖ', end_registration_keyboard.get_keyboard())
                photo_url = bot.method(f'users.get', {'fields': ['photo_max_orig'], 'user_id': user_id})[0][
                    'photo_max_orig']

                with open(f'users_photos/{user_id}.png', 'wb') as f:
                    f.write(requests.get(photo_url).content)

                upload_url = bot.method(f'photos.getMessagesUploadServer', {})['upload_url']
                upload = requests.post(upload_url, files={'photo': open(f'users_photos/{user_id}.png', 'rb')}).json()
                result = bot.method('photos.saveMessagesPhoto', {'photo': upload['photo'],
                                                                 'server': upload['server'],
                                                                 'hash': upload['hash']})[0]

                photo = 'photo' + str(result['owner_id']) + '_' + str(result['id'])

                database_query(f'UPDATE users SET photo="{photo}", state=0 WHERE user_id={user_id}')


        elif state == 101:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –≤—ã–±–æ—Ä–∫–∏
            send('‚úÖ –ü—Ä–∏–Ω—è—Ç–æ')
            if text == '–ø–∞—Ä–Ω–µ–π':
                database_query(f'UPDATE users SET select_sex=2, state=1 WHERE user_id={user_id}')
            elif text == '–¥–µ–≤—É—à–µ–∫':
                database_query(f'UPDATE users SET select_sex=1, state=1 WHERE user_id={user_id}')
            elif text == '–≤—Å–µ—Ö':
                database_query(f'UPDATE users SET select_sex=0, state=1 WHERE user_id={user_id}')
            else:
                send('‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è;')


        elif state is None:

            if '—Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É' in text:  # —Å—Ç–∞—Ä—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                send('–ü—Ä–∏–≤–µ—Ç!\n–Ø - –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤, –∏ —Å–µ–π—á–∞—Å –º—ã —Å —Ç–æ–±–æ–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—É!')
                send('–ó–¥–µ—Å—å —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –ª–∏—à—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ –∏ —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç: —ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ;\n'
                     '–ò–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –ø–æ–ª –º—ã –≤–æ–∑—å–º—ë–º –∏–∑ —Ç–≤–æ–µ–≥–æ –∞–∫–∞—É–Ω—Ç–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.')
                send('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç;')
                usersex = bot.method(f'users.get', {'user_ids': [user_id], 'fields': ['sex']})[0][
                    'sex']  # 1 - –∂–µ–Ω. 2 - –º—É–∂.
                userdata = bot.method('users.get', {'user_ids': user_id})[0]  # –∏–º—è/—Ñ–∞–º–∏–ª–∏—è —é–∑–µ—Ä–∞ –ø–æ –µ–≥–æ id
                code = generate_random_string(user_id)
                database_query(
                    f'INSERT OR IGNORE INTO users (user_id, name, surname, about, '
                    f'likes, dislikes, state, viewed_user, photo, views, pro, city, views_count, pro_update_date, '
                    f'referral_code, payment_code, age, sex)'
                    f' VALUES ({user_id}, "{userdata["first_name"]}", "{userdata["last_name"]}",'
                    f'"–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏;", 0, 0, 9, "{user_id}", 0, 0, 0, "all", 0, "{now}", "{code}",'
                    f'0, 0, {usersex});')  # –¥–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤ –±–∞–∑—É
            else:
                send('–î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∞–Ω–∫–µ—Ç—É üëº', createprofile.get_keyboard())

        else:
            if '‚ùå –æ—Ç–º–µ–Ω–∞' in text:
                database_query(f'UPDATE users SET state=0 WHERE user_id={user_id}')
                send('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ ‚úÖ', mainmenu.get_keyboard())

            elif 'üôç‚Äç‚ôÇ' in text:
                userdata = database.execute(
                    f'SELECT name, surname, about, views, likes, dislikes, age FROM users WHERE '
                    f'user_id={user_id}').fetchone()  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–∫–∞—É–Ω—Ç–∞ —é–∑–µ—Ä–∞
                city = database.execute(f'SELECT city FROM users WHERE user_id={user_id}').fetchone()[0]
                photo = database.execute(f'SELECT photo FROM users WHERE user_id={user_id}').fetchone()[0]

                if city == 'all':
                    city = '–í—Å–µ –≥–æ—Ä–æ–¥–∞;'
                pro = database.execute(f'SELECT pro FROM users WHERE user_id={user_id}').fetchone()[0]
                pro = 'üëë –ü–æ–¥–ø–∏—Å–∫–∞ pro –∞–∫—Ç–∏–≤–Ω–∞\n' if pro == 1 else '‚ùå –ü–æ–¥–ø–∏—Å–∫–∏ pro –Ω–µ—Ç\n'
                send('üëÄ –í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n\n'
                     f'üõÄ {userdata[0]} {userdata[1]} | {city}\n'
                     f'{pro}'
                     f'üóì –í–æ–∑—Ä–∞—Å—Ç: {userdata[6]}\n\n'
                     f'{userdata[2]}\n\n'
                     f'üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n'
                     f'üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: {userdata[3]}\n'
                     f'‚ù§ –õ–∞–π–∫–æ–≤: {userdata[4]}\n'
                     f'üíî –î–∏–∑–ª–∞–π–∫–æ–≤: {userdata[5]}\n'
                     f'–¢–≤–æ–µ —Ñ–æ—Ç–æ (—Ñ–æ—Ç–æ –∏–∑ —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ):',
                     main_profile_keyboard.get_keyboard(),
                     user_id,
                     photo)

            elif '–º–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è' in text:
                send('–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É –∞–Ω–∫–µ—Ç—É ‚úè', edit_profile_keyboard.get_keyboard())

            elif '–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂' in text:
                phis = get_payments_history()
                payment_code = database.execute(f'SELECT payment_code FROM users WHERE user_id={user_id}').fetchone()[0]
                if payment_code != 0:
                    if phis:
                        if phis and phis[1].raw['errorCode'] == 0 and phis[1].raw['status'] != 'WAITING':
                            userdata = phis[1].raw
                            database_query(f'UPDATE users SET payment_code=0, pro=1 WHERE user_id={user_id}')
                            send('üéà –°—Ç–∞—Ç—É—Å: –æ–ø–ª–∞—á–µ–Ω–æ ‚úÖ\n\n'
                                 '‚ùó –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ:\n'
                                 f'üìÜ –î–∞—Ç–∞: {userdata["date"]}\n'
                                 f'üí∏ –°—É–º–º–∞: @datingbotvk ({userdata["total"]["amount"]} —Ä—É–±–ª–µ–π)\n'
                                 f'üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {userdata["comment"]}'
                                 '\n\n–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω üëë', promainmenu.get_keyboard())
                            database_query(f'UPDATE users SET payment_code=0, pro=1 WHERE user_id={user_id}')

                        elif phis[1].raw['errorCode'] != 0:
                            send('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–ª–∞—Ç—ë–∂ –∏ –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –∫–æ–¥.',
                                 back_payment_keyboard.get_keyboard())
                        else:
                            send('‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫;\n'
                                 '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n'
                                 '1) –í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ–≤–∞—Ä\n'
                                 '2) –í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ–≤–∞—Ä, –Ω–æ –Ω–µ –≤–≤–µ–ª–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–æ–¥\n'
                                 '3) –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏\n\n'
                                 '–¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à –ø–ª–∞—Ç—ë–∂.\n'
                                 '–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –≤ –ø–µ—Ä–µ–≤–æ–¥–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É QIWI.',
                                 back_payment_keyboard.get_keyboard())
                    else:
                        send('‚ùå –í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ–≤–∞—Ä.', back_payment_keyboard.get_keyboard())
                else:
                    send('–ù–∏–∫–∞–∫–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è ‚öô‚úÖ')

            elif '–Ω–µ—Ç–ø—Ä–æ' in text:
                send('–æ–∫', mainmenu.get_keyboard())
                database_query(f'UPDATE users SET pro=0 WHERE user_id={user_id}')

            elif '–¥–∞–ø—Ä–æ' in text:
                send('–æ–∫', mainmenu.get_keyboard())
                database_query(f'UPDATE users SET pro=1 WHERE user_id={user_id}')

            elif '–∫—É–ø–∏—Ç—å pro' in text:
                url = get_qiwi_payment_url()
                code = generate_payment_code()
                check_payment_keyboard = VkKeyboard(inline=True)
                check_payment_keyboard.add_openlink_button('–û–ø–ª–∞—Ç–∏—Ç—å ‚ñ∂', url)
                check_payment_keyboard.add_button('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂ üí≤', VkKeyboardColor.PRIMARY)
                send(f'üí≥ –ß–µ–∫ –Ω–∞ —Å—É–º–º—É @datingbotvk ({qiwi_count} —Ä—É–±–ª–µ–π)\n'
                     'üéà –°—Ç–∞—Ç—É—Å: –Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ ‚ùå\n\n–í–∞—à–∞ –ø–ª–∞—Ç—ë–∂–Ω–∞—è —Ñ–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞.\n'
                     f'\n ‚ùó –í–ê–ñ–ù–û: –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–ª–∞—Ç–µ–∂—É –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥: {code}\n'
                     f'–ü–æ—Å–ª–µ —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç—ë–∂".\n\n'
                     f'‚¨á –ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.', check_payment_keyboard.get_keyboard())
                send('–ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É –∫–Ω–æ–ø–∫–æ–π "–æ—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç—ë–∂".',
                     back_payment_keyboard.get_keyboard())
                database_query(f'UPDATE users SET payment_code={int(code)} WHERE user_id={user_id}')

            elif '–∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä–∫—É' in text:
                send('–í—ã–±–µ—Ä–∏, –∫–æ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö?', sex_keyboard.get_keyboard())
                database_query(f'UPDATE users SET state=101 WHERE user_id={user_id}')

            elif '–æ–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ' in text:
                send('–°–∫–∞—á–∏–≤–∞—é —Ñ–æ—Ç–æ —Å —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ ‚öô')
                photo_url = bot.method(f'users.get', {'fields': ['photo_max_orig'], 'user_id': user_id})[0][
                    'photo_max_orig']
                database_query(f'UPDATE users SET photo="{photo_url}" WHERE user_id={user_id}')

                with open(f'users_photos/{user_id}.png', 'wb') as f:
                    f.write(requests.get(photo_url).content)
                send('–ó–∞–≥—Ä—É–∂–∞—é —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚öô')
                upload_url = bot.method(f'photos.getMessagesUploadServer', {})['upload_url']
                upload = requests.post(upload_url, files={'photo': open(f'users_photos/{user_id}.png', 'rb')}).json()
                result = bot.method('photos.saveMessagesPhoto', {'photo': upload['photo'],
                                                                 'server': upload['server'],
                                                                 'hash': upload['hash']})[0]
                send('–°–æ—Å—Ç–∞–≤–ª—è—é –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ —Ñ–æ—Ç–æ ‚öô')
                photo = 'photo' + str(result['owner_id']) + '_' + str(result['id'])
                send('–°–æ—Ö—Ä–∞–Ω—è—é —Ñ–æ—Ç–æ —Ç–µ–±–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å ‚öô')
                database_query(f'UPDATE users SET photo="{photo}" WHERE user_id={user_id}')
                send('‚úÖ –¢–≤–æ—ë —Ñ–æ—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ;')


            elif '–º–æ–π —Ä–µ—Ñ. –∫–æ–¥' in text:
                code = database.execute(f'SELECT referral_code FROM users WHERE user_id={user_id}').fetchone()[0]
                code = [0, 0] if not code else code

                if len(code) != 0:
                    if code is None or code == [0, 0]:
                        database_query(f'UPDATE users SET referral_code="{generate_random_string(user_id)}" '
                                       f'WHERE user_id={user_id}')
                    code = database.execute(f'SELECT referral_code FROM users WHERE user_id={user_id}').fetchone()[0]
                    send(f'–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {code}\n\n'
                         f'–ö–∞–∫ –∏–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —á–∏—Ç–∞–π—Ç–µ —Ç—É—Ç:\n'
                         f'https://vk.com/@datingbotvk-kak-vospolzovatsya-ref-kodom')
                else:
                    send('–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω üë¥')


            elif '—Ä–∞—Å—Å—ã–ª–∫–∞' in text:
                text = text.split('—Ä–∞—Å—Å—ã–ª–∫–∞')[1]
                users = database.execute(f'SELECT user_id FROM users').fetchall()
                for i in users:
                    try:
                        send(text, None, i[0])
                    except:
                        send('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —é–∑–µ—Ä!')


            elif '–≤–≤–µ—Å—Ç–∏ —Ä–µ—Ñ. –∫–æ–¥' in text:
                send('–í–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ. –∫–æ–¥: ')
                database_query(f'UPDATE users SET state=7 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '–≥–æ—Ä–æ–¥' in text:
                send('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é (–≥–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è) –∏ —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –ª—é–¥–µ–π –∏–∑ —Ç–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚úÖ',
                     geolocation_keyboard.get_keyboard())
                database_query(f'UPDATE users SET state=8 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '‚úâ' in text:
                send('–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ: ', keyboard=cancel_keyboard.get_keyboard())
                database_query(f'UPDATE users SET state=5 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '–∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç' in text:
                send('–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç;')
                database_query(f'UPDATE users SET state=91 WHERE user_id={user_id}')

            elif '–∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ' in text:
                send('‚úè –í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ')
                database_query(f'UPDATE users SET state=21 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '—É–¥–∞–ª–∏—Ç—å –∞–∫–∞—É–Ω—Ç' in text:
                send('–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∞—É–Ω—Ç–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–µ–µ:\n'
                     '"–¥–∞, —è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∞—É–Ω—Ç–∞.", –∏ –º—ã —É–¥–∞–ª–∏–º –≤–∞—à –∞–∫–∞—É–Ω—Ç.\n\n'
                     '–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —É–¥–∞–ª—ë–Ω–Ω—ã–µ –∞–∫–∞—É–Ω—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç—É—Ç:\n'
                     'https://vk.com/@datingbotvk-udalenie-akauntov')
                database_query(f'UPDATE users SET state=3 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '–æ—Ç–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∞–∫–∞—É–Ω—Ç' in text:
                active = database.execute(f'SELECT active FROM users WHERE user_id={user_id}').fetchone()[0]
                if active == 1:
                    send('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á—ë–Ω ‚úÖ')
                    database_query(f'UPDATE users SET active=0 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                else:
                    send('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤–∫–ª—é—á—ë–Ω ‚úÖ')
                    database_query(f'UPDATE users SET active=1 WHERE user_id={user_id}')  # –º–µ–Ω—è—é —Å–æ—Å—Ç–æ—è–Ω–∏–µ

            elif '—Å–º–æ—Ç—Ä–µ—Ç—å' in text or '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä' in text:
                view()  # –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É

            elif '–æ—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç—ë–∂' in text:
                pro = database.execute(f'SELECT pro FROM users WHERE user_id={user_id}').fetchone()[0]
                keyboard = mainmenu
                if pro == 1:
                    keyboard = promainmenu
                database_query(f'UPDATE users SET payment_code=0 WHERE user_id={user_id}')
                send('‚úÖ –ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ pro –æ—Ç–º–µ–Ω–µ–Ω–∞.', keyboard.get_keyboard())
                view()


            elif '‚ù§' in text:  # –ª–∞–π–∫
                try:
                    recipient = database.execute(f'SELECT viewed_user FROM users WHERE user_id={user_id}').fetchone()
                    recipient = database.execute(
                        f'SELECT name, surname, user_id FROM users WHERE user_id={recipient[0]}').fetchone()
                    recipient_likes = \
                        database.execute(f'SELECT likes FROM users WHERE user_id={recipient[2]}').fetchone()[0]
                    database_query(f'UPDATE users SET likes={recipient_likes + 1} WHERE user_id={recipient[2]}')
                    sender = database.execute(f'SELECT name, surname FROM users WHERE user_id={user_id}').fetchone()
                    user = bot.method(f'users.get', {'user_ids': [user_id], 'fields': 'screen_name'})[0]

                    userdata = database.execute(
                        f'SELECT photo, age, city, name, surname, about FROM users WHERE user_id={user_id}').fetchone()
                    city = '–Ω–µ —É–∫–∞–∑–∞–Ω' if userdata[2] is None or userdata[2] == 'none' else userdata[2]
                    photo = userdata[0]

                    if photo == '0':
                        photo = 'photo-204338719_457239214'

                    if city == 'all':
                        city = '–≤—Å–µ –≥–æ—Ä–æ–¥–∞'

                    write_a_message_keyboard = VkKeyboard(inline=True)
                    write_a_message_keyboard.add_openlink_button('–ù–∞–ø–∏—Å–∞—Ç—å üìß', f'https://vk.me/{user["screen_name"]}')

                    age = userdata[1] if userdata[1] else '–Ω–µ —É–∫–∞–∑–∞–Ω'

                    send(f'{recipient[0]}, –ø—Ä–∏–≤–µ—Ç!üëã\n'
                         f'{sender[0]} {sender[1]} –ø–æ—Å—Ç–∞–≤–∏–ª —Ç–µ–±–µ –ª–∞–π–∫!\n\n'
                         '‚úÖ –í–æ—Ç –µ–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n'
                         f'üíû {userdata[3]} {userdata[4]} | {age} | {city}\n\n'
                         f'{userdata[5]}\n\n–§–æ—Ç–æ:', write_a_message_keyboard.get_keyboard(),
                         recipient[2],
                         photo)
                except:
                    send('–í—ã –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ.')

                view()  # –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É

            elif 'üíî' in text:  # –¥–∏–∑–ª–∞–π–∫
                recipient = database.execute(f'SELECT viewed_user FROM users WHERE user_id={user_id}').fetchone()
                recipient = database.execute(
                    f'SELECT name, surname, user_id FROM users WHERE user_id={recipient[0]}').fetchone()
                recipient_likes = \
                    database.execute(f'SELECT dislikes FROM users WHERE user_id={recipient[2]}').fetchone()[
                        0]
                database_query(f'UPDATE users SET dislikes={recipient_likes + 1} WHERE user_id={recipient[2]}')

                view()  # –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É

            if database.execute(f'SELECT all_views FROM users WHERE user_id={user_id}').fetchone()[0] % 40 == 0:
                send('üëã –ü—Ä–∏–≤–µ—Ç\n –ß—Ç–æ–±—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –±–æ–ª—å—à–µ –∞–Ω–∫–µ—Ç, –ø–æ–¥–ø–∏—à–∏—Å—å!')
